generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model blog {
  id           String   @id
  blogTitle    String   @map("title")
  blogSubtitle String   @map("subtitle")
  isPublic     Boolean  @default(false) @map("is_public")
  blogText     String   @default("Long blog text") @map("blog_text")
  isPinned     Boolean  @default(false) @map("is_pinned")
  publishDate  DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  category     String?
  color        String?
  slug         String?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model project {
  id                String              @id @db.VarChar
  startTime         DateTime?           @map("start_time") @db.Timestamp(6)
  endTime           DateTime?           @map("end_time") @db.Timestamp(6)
  title             String              @db.VarChar
  description       String              @db.VarChar
  isOngoing         Boolean             @map("is_ongoing")
  techStack         String[]            @map("tech_stack")
  playstoreLink     String?             @map("google_play_url") @db.VarChar
  websiteUrl        String?             @map("website_url") @db.VarChar
  otherLink         String?             @map("other_url") @db.VarChar
  subtitle          String?
  githubLink        String?             @map("github_url ") @db.VarChar
  images            String[]
  project_techstack project_techstack[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model project_techstack {
  project_id    String     @db.VarChar
  technology_id String     @db.VarChar
  usage         String     @db.VarChar
  project       project    @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "project_technology_project_id_fkey")
  tech_stack    tech_stack @relation(fields: [technology_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "project_technology_technology_id_fkey")

  @@id([project_id, technology_id], map: "project_technology_pkey")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tech_stack {
  id                String              @id @db.VarChar
  terchstack_name   String              @db.VarChar
  usage             String              @db.VarChar
  icon_path         String              @db.VarChar
  project_techstack project_techstack[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model case_study {
  id                String   @id
  title             String   @db.VarChar
  subtitle          String?  @db.VarChar
  problem_statement String   @db.VarChar
  description       String   @db.VarChar
  solution          String   @db.VarChar
  study_content     String   @db.VarChar
  conclusion        String   @db.VarChar
  images            String[]
  is_public         Boolean  @default(false)
  created_at        DateTime @default(now()) @db.Timestamptz(6)
  category          String?
  color             String?
  tech_stack        String[]
}
